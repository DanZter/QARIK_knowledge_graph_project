{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"test_1","provenance":[],"collapsed_sections":[],"mount_file_id":"19v14wNR6MLAEHDsjMx-vRKf3hI_m2vr2","authorship_tag":"ABX9TyO/9Md9z5xUbEEyArUxt60m"},"kernelspec":{"name":"python3","display_name":"Python 3"}},"cells":[{"cell_type":"code","metadata":{"id":"4IB_5PGSB1kC","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":373},"executionInfo":{"status":"ok","timestamp":1595250741172,"user_tz":-60,"elapsed":7993,"user":{"displayName":"DANNY SIMON","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gi18KVFgThD7ZGzTCYOye6DyIuS7dH-MpImpY15vg=s64","userId":"18269197615476840761"}},"outputId":"52b0215e-daec-45cf-c697-5845ba39ebb1"},"source":["pip install spacy"],"execution_count":1,"outputs":[{"output_type":"stream","text":["Requirement already satisfied: spacy in /usr/local/lib/python3.6/dist-packages (2.2.4)\n","Requirement already satisfied: blis<0.5.0,>=0.4.0 in /usr/local/lib/python3.6/dist-packages (from spacy) (0.4.1)\n","Requirement already satisfied: plac<1.2.0,>=0.9.6 in /usr/local/lib/python3.6/dist-packages (from spacy) (1.1.3)\n","Requirement already satisfied: thinc==7.4.0 in /usr/local/lib/python3.6/dist-packages (from spacy) (7.4.0)\n","Requirement already satisfied: murmurhash<1.1.0,>=0.28.0 in /usr/local/lib/python3.6/dist-packages (from spacy) (1.0.2)\n","Requirement already satisfied: tqdm<5.0.0,>=4.38.0 in /usr/local/lib/python3.6/dist-packages (from spacy) (4.41.1)\n","Requirement already satisfied: wasabi<1.1.0,>=0.4.0 in /usr/local/lib/python3.6/dist-packages (from spacy) (0.7.0)\n","Requirement already satisfied: setuptools in /usr/local/lib/python3.6/dist-packages (from spacy) (49.1.0)\n","Requirement already satisfied: srsly<1.1.0,>=1.0.2 in /usr/local/lib/python3.6/dist-packages (from spacy) (1.0.2)\n","Requirement already satisfied: numpy>=1.15.0 in /usr/local/lib/python3.6/dist-packages (from spacy) (1.18.5)\n","Requirement already satisfied: requests<3.0.0,>=2.13.0 in /usr/local/lib/python3.6/dist-packages (from spacy) (2.23.0)\n","Requirement already satisfied: cymem<2.1.0,>=2.0.2 in /usr/local/lib/python3.6/dist-packages (from spacy) (2.0.3)\n","Requirement already satisfied: preshed<3.1.0,>=3.0.2 in /usr/local/lib/python3.6/dist-packages (from spacy) (3.0.2)\n","Requirement already satisfied: catalogue<1.1.0,>=0.0.7 in /usr/local/lib/python3.6/dist-packages (from spacy) (1.0.0)\n","Requirement already satisfied: idna<3,>=2.5 in /usr/local/lib/python3.6/dist-packages (from requests<3.0.0,>=2.13.0->spacy) (2.10)\n","Requirement already satisfied: chardet<4,>=3.0.2 in /usr/local/lib/python3.6/dist-packages (from requests<3.0.0,>=2.13.0->spacy) (3.0.4)\n","Requirement already satisfied: urllib3!=1.25.0,!=1.25.1,<1.26,>=1.21.1 in /usr/local/lib/python3.6/dist-packages (from requests<3.0.0,>=2.13.0->spacy) (1.24.3)\n","Requirement already satisfied: certifi>=2017.4.17 in /usr/local/lib/python3.6/dist-packages (from requests<3.0.0,>=2.13.0->spacy) (2020.6.20)\n","Requirement already satisfied: importlib-metadata>=0.20; python_version < \"3.8\" in /usr/local/lib/python3.6/dist-packages (from catalogue<1.1.0,>=0.0.7->spacy) (1.7.0)\n","Requirement already satisfied: zipp>=0.5 in /usr/local/lib/python3.6/dist-packages (from importlib-metadata>=0.20; python_version < \"3.8\"->catalogue<1.1.0,>=0.0.7->spacy) (3.1.0)\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"6zW9BOZkX2sD","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":423},"executionInfo":{"status":"ok","timestamp":1595250747680,"user_tz":-60,"elapsed":14475,"user":{"displayName":"DANNY SIMON","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gi18KVFgThD7ZGzTCYOye6DyIuS7dH-MpImpY15vg=s64","userId":"18269197615476840761"}},"outputId":"7be0ec55-72e2-4fe8-dd3a-cc77bc6ec15c"},"source":["!python3 -m spacy download en_core_web_sm"],"execution_count":2,"outputs":[{"output_type":"stream","text":["Requirement already satisfied: en_core_web_sm==2.2.5 from https://github.com/explosion/spacy-models/releases/download/en_core_web_sm-2.2.5/en_core_web_sm-2.2.5.tar.gz#egg=en_core_web_sm==2.2.5 in /usr/local/lib/python3.6/dist-packages (2.2.5)\n","Requirement already satisfied: spacy>=2.2.2 in /usr/local/lib/python3.6/dist-packages (from en_core_web_sm==2.2.5) (2.2.4)\n","Requirement already satisfied: setuptools in /usr/local/lib/python3.6/dist-packages (from spacy>=2.2.2->en_core_web_sm==2.2.5) (49.1.0)\n","Requirement already satisfied: cymem<2.1.0,>=2.0.2 in /usr/local/lib/python3.6/dist-packages (from spacy>=2.2.2->en_core_web_sm==2.2.5) (2.0.3)\n","Requirement already satisfied: preshed<3.1.0,>=3.0.2 in /usr/local/lib/python3.6/dist-packages (from spacy>=2.2.2->en_core_web_sm==2.2.5) (3.0.2)\n","Requirement already satisfied: murmurhash<1.1.0,>=0.28.0 in /usr/local/lib/python3.6/dist-packages (from spacy>=2.2.2->en_core_web_sm==2.2.5) (1.0.2)\n","Requirement already satisfied: srsly<1.1.0,>=1.0.2 in /usr/local/lib/python3.6/dist-packages (from spacy>=2.2.2->en_core_web_sm==2.2.5) (1.0.2)\n","Requirement already satisfied: tqdm<5.0.0,>=4.38.0 in /usr/local/lib/python3.6/dist-packages (from spacy>=2.2.2->en_core_web_sm==2.2.5) (4.41.1)\n","Requirement already satisfied: blis<0.5.0,>=0.4.0 in /usr/local/lib/python3.6/dist-packages (from spacy>=2.2.2->en_core_web_sm==2.2.5) (0.4.1)\n","Requirement already satisfied: numpy>=1.15.0 in /usr/local/lib/python3.6/dist-packages (from spacy>=2.2.2->en_core_web_sm==2.2.5) (1.18.5)\n","Requirement already satisfied: thinc==7.4.0 in /usr/local/lib/python3.6/dist-packages (from spacy>=2.2.2->en_core_web_sm==2.2.5) (7.4.0)\n","Requirement already satisfied: requests<3.0.0,>=2.13.0 in /usr/local/lib/python3.6/dist-packages (from spacy>=2.2.2->en_core_web_sm==2.2.5) (2.23.0)\n","Requirement already satisfied: catalogue<1.1.0,>=0.0.7 in /usr/local/lib/python3.6/dist-packages (from spacy>=2.2.2->en_core_web_sm==2.2.5) (1.0.0)\n","Requirement already satisfied: wasabi<1.1.0,>=0.4.0 in /usr/local/lib/python3.6/dist-packages (from spacy>=2.2.2->en_core_web_sm==2.2.5) (0.7.0)\n","Requirement already satisfied: plac<1.2.0,>=0.9.6 in /usr/local/lib/python3.6/dist-packages (from spacy>=2.2.2->en_core_web_sm==2.2.5) (1.1.3)\n","Requirement already satisfied: chardet<4,>=3.0.2 in /usr/local/lib/python3.6/dist-packages (from requests<3.0.0,>=2.13.0->spacy>=2.2.2->en_core_web_sm==2.2.5) (3.0.4)\n","Requirement already satisfied: urllib3!=1.25.0,!=1.25.1,<1.26,>=1.21.1 in /usr/local/lib/python3.6/dist-packages (from requests<3.0.0,>=2.13.0->spacy>=2.2.2->en_core_web_sm==2.2.5) (1.24.3)\n","Requirement already satisfied: certifi>=2017.4.17 in /usr/local/lib/python3.6/dist-packages (from requests<3.0.0,>=2.13.0->spacy>=2.2.2->en_core_web_sm==2.2.5) (2020.6.20)\n","Requirement already satisfied: idna<3,>=2.5 in /usr/local/lib/python3.6/dist-packages (from requests<3.0.0,>=2.13.0->spacy>=2.2.2->en_core_web_sm==2.2.5) (2.10)\n","Requirement already satisfied: importlib-metadata>=0.20; python_version < \"3.8\" in /usr/local/lib/python3.6/dist-packages (from catalogue<1.1.0,>=0.0.7->spacy>=2.2.2->en_core_web_sm==2.2.5) (1.7.0)\n","Requirement already satisfied: zipp>=0.5 in /usr/local/lib/python3.6/dist-packages (from importlib-metadata>=0.20; python_version < \"3.8\"->catalogue<1.1.0,>=0.0.7->spacy>=2.2.2->en_core_web_sm==2.2.5) (3.1.0)\n","\u001b[38;5;2m✔ Download and installation successful\u001b[0m\n","You can now load the model via spacy.load('en_core_web_sm')\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"zQXX3gMEYXFS","colab_type":"code","colab":{},"executionInfo":{"status":"ok","timestamp":1595250748390,"user_tz":-60,"elapsed":15167,"user":{"displayName":"DANNY SIMON","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gi18KVFgThD7ZGzTCYOye6DyIuS7dH-MpImpY15vg=s64","userId":"18269197615476840761"}}},"source":["import spacy\n","from spacy.lang.en import English\n","import networkx as nx\n","import matplotlib.pyplot as plt"],"execution_count":3,"outputs":[]},{"cell_type":"code","metadata":{"id":"6VcOarjcYdTh","colab_type":"code","colab":{},"executionInfo":{"status":"ok","timestamp":1595250748391,"user_tz":-60,"elapsed":15158,"user":{"displayName":"DANNY SIMON","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gi18KVFgThD7ZGzTCYOye6DyIuS7dH-MpImpY15vg=s64","userId":"18269197615476840761"}}},"source":["def getSentences(text):\n","    nlp = English()\n","    nlp.add_pipe(nlp.create_pipe('sentencizer'))\n","    document = nlp(text)\n","    return [sent.string.strip() for sent in document.sents]\n","\n","def printToken(token):\n","    print(token.text, \"->\", token.dep_)\n","\n","def appendChunk(original, chunk):\n","    return original + ' ' + chunk\n","\n","def isRelationCandidate(token):\n","    deps = [\"ROOT\", \"adj\", \"attr\", \"agent\", \"amod\"]\n","    return any(subs in token.dep_ for subs in deps)\n","\n","def isConstructionCandidate(token):\n","    deps = [\"compound\", \"prep\", \"conj\", \"mod\"]\n","    return any(subs in token.dep_ for subs in deps)"],"execution_count":4,"outputs":[]},{"cell_type":"code","metadata":{"id":"zuOWi8EeYoBQ","colab_type":"code","colab":{},"executionInfo":{"status":"ok","timestamp":1595250748392,"user_tz":-60,"elapsed":15154,"user":{"displayName":"DANNY SIMON","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gi18KVFgThD7ZGzTCYOye6DyIuS7dH-MpImpY15vg=s64","userId":"18269197615476840761"}}},"source":["def processSubjectObjectPairs(tokens):\n","    subject = ''\n","    object = ''\n","    relation = ''\n","    subjectConstruction = ''\n","    objectConstruction = ''\n","    for token in tokens:\n","        printToken(token)\n","        if \"punct\" in token.dep_:\n","            continue\n","        if isRelationCandidate(token):\n","            relation = appendChunk(relation, token.lemma_)\n","        if isConstructionCandidate(token):\n","            if subjectConstruction:\n","                subjectConstruction = appendChunk(subjectConstruction, token.text)\n","            if objectConstruction:\n","                objectConstruction = appendChunk(objectConstruction, token.text)\n","        if \"subj\" in token.dep_:\n","            subject = appendChunk(subject, token.text)\n","            subject = appendChunk(subjectConstruction, subject)\n","            subjectConstruction = ''\n","        if \"obj\" in token.dep_:\n","            object = appendChunk(object, token.text)\n","            object = appendChunk(objectConstruction, object)\n","            objectConstruction = ''\n","\n","    print (subject.strip(), \",\", relation.strip(), \",\", object.strip())\n","    return (subject.strip(), relation.strip(), object.strip())\n","\n","def processSentence(sentence):\n","    tokens = nlp_model(sentence)\n","    return processSubjectObjectPairs(tokens)"],"execution_count":5,"outputs":[]},{"cell_type":"code","metadata":{"id":"HGlPqCsbYsr_","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":54},"executionInfo":{"status":"ok","timestamp":1595250836878,"user_tz":-60,"elapsed":1341,"user":{"displayName":"DANNY SIMON","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gi18KVFgThD7ZGzTCYOye6DyIuS7dH-MpImpY15vg=s64","userId":"18269197615476840761"}},"outputId":"af8e2c7a-2860-405e-9121-779351d23c85"},"source":["def printGraph(triples):\n","    G = nx.Graph()\n","    for triple in triples:\n","        G.add_node(triple[0])\n","        G.add_node(triple[1])\n","        G.add_node(triple[2])\n","        G.add_edge(triple[0], triple[1])\n","        G.add_edge(triple[1], triple[2])\n","\n","    pos = nx.spring_layout(G)\n","    plt.figure()\n","    nx.draw(G, pos, edge_color='black', width=1, linewidths=1,\n","            node_size=500, node_color='seagreen', alpha=0.9,\n","            labels={node: node for node in G.nodes()})\n","    plt.axis('off')\n","    plt.show()\n","\n","if __name__ == \"__main__\":\n","\n","    text = \"Language model pre-training has been shown to be effective for improving many natural language processing tasks (Dai and Le, 2015; Peters et al., 2018a; Radford et al., 2018; Howard and Ruder, 2018). These include sentence-level tasks such as natural language inference (Bowman et al., 2015; Williams et al., 2018) and paraphrasing (Dolan and Brockett, 2005), which aim to predict the relationships between sentences by analyzing them holistically, as well as token-level tasks such as named entity recognition and question answering, where models are required to produce fine-grained output at the token level (Tjong Kim Sang and De Meulder, 2003; Rajpurkar et al., 2016). There are two existing strategies for applying pre-trained language representations to downstream tasks: feature-based and fine-tuning. The feature-based approach, such as ELMo (Peters et al., 2018a), uses task-specific architectures that include the pre-trained representations as additional features. The fine-tuning approach, such as the Generative Pre-trained Transformer (OpenAI GPT) (Radford et al., 2018), introduces minimal task-specific parameters, and is trained on the downstream tasks by simply fine-tuning all pretrained parameters. The two approaches share the same objective function during pre-training, where they use unidirectional language models to learn general language representations. We argue that current techniques restrict the power of the pre-trained representations, especially for the fine-tuning approaches. The major limitation is that standard language models are unidirectional, and this limits the choice of architectures that can be used during pre-training. For example, in OpenAI GPT, the authors use a left-toright architecture, where every token can only attend to previous tokens in the self-attention layers of the Transformer (Vaswani et al., 2017). Such restrictions are sub-optimal for sentence-level tasks, and could be very harmful when applying finetuning based approaches to token-level tasks such as question answering, where it is crucial to incorporate context from both directions. In this paper, we improve the fine-tuning based approaches by proposing BERT: Bidirectional Encoder Representations from Transformers. BERT alleviates the previously mentioned unidirectionality constraint by using a “masked language model” (MLM) pre-training objective, inspired by the Cloze task (Taylor, 1953).\"\n","    sentences = getSentences(text)\n","    nlp_model = spacy.load('en_core_web_sm')\n","\n","    triples = []\n","    print (text)\n"],"execution_count":12,"outputs":[{"output_type":"stream","text":["Language model pre-training has been shown to be effective for improving many natural language processing tasks (Dai and Le, 2015; Peters et al., 2018a; Radford et al., 2018; Howard and Ruder, 2018). These include sentence-level tasks such as natural language inference (Bowman et al., 2015; Williams et al., 2018) and paraphrasing (Dolan and Brockett, 2005), which aim to predict the relationships between sentences by analyzing them holistically, as well as token-level tasks such as named entity recognition and question answering, where models are required to produce fine-grained output at the token level (Tjong Kim Sang and De Meulder, 2003; Rajpurkar et al., 2016). There are two existing strategies for applying pre-trained language representations to downstream tasks: feature-based and fine-tuning. The feature-based approach, such as ELMo (Peters et al., 2018a), uses task-specific architectures that include the pre-trained representations as additional features. The fine-tuning approach, such as the Generative Pre-trained Transformer (OpenAI GPT) (Radford et al., 2018), introduces minimal task-specific parameters, and is trained on the downstream tasks by simply fine-tuning all pretrained parameters. The two approaches share the same objective function during pre-training, where they use unidirectional language models to learn general language representations. We argue that current techniques restrict the power of the pre-trained representations, especially for the fine-tuning approaches. The major limitation is that standard language models are unidirectional, and this limits the choice of architectures that can be used during pre-training. For example, in OpenAI GPT, the authors use a left-toright architecture, where every token can only attend to previous tokens in the self-attention layers of the Transformer (Vaswani et al., 2017). Such restrictions are sub-optimal for sentence-level tasks, and could be very harmful when applying finetuning based approaches to token-level tasks such as question answering, where it is crucial to incorporate context from both directions. In this paper, we improve the fine-tuning based approaches by proposing BERT: Bidirectional Encoder Representations from Transformers. BERT alleviates the previously mentioned unidirectionality constraint by using a “masked language model” (MLM) pre-training objective, inspired by the Cloze task (Taylor, 1953).\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"yHa1h7KkbZLH","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":1000},"executionInfo":{"status":"ok","timestamp":1595250838140,"user_tz":-60,"elapsed":1870,"user":{"displayName":"DANNY SIMON","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gi18KVFgThD7ZGzTCYOye6DyIuS7dH-MpImpY15vg=s64","userId":"18269197615476840761"}},"outputId":"2271545e-6e23-4685-e5bf-1540e9cc6851"},"source":["for sentence in sentences:\n","        triples.append(processSentence(sentence))\n","\n","printGraph(triples)"],"execution_count":13,"outputs":[{"output_type":"stream","text":["Language -> compound\n","model -> compound\n","pre -> dep\n","- -> dep\n","training -> nsubjpass\n","has -> aux\n","been -> auxpass\n","shown -> ROOT\n","to -> aux\n","be -> xcomp\n","effective -> acomp\n","for -> prep\n","improving -> pcomp\n","many -> amod\n","natural -> amod\n","language -> compound\n","processing -> compound\n","tasks -> dobj\n","( -> punct\n","Dai -> appos\n","and -> cc\n","Le -> conj\n",", -> punct\n","2015 -> npadvmod\n","; -> punct\n","Peters -> appos\n","et -> compound\n","al -> dep\n",". -> appos\n",", -> punct\n","training , show many natural , tasks\n","2018a -> ROOT\n","; -> punct\n","Radford -> appos\n","et -> compound\n","al -> dep\n",". -> appos\n",", -> punct\n"," , 2018a , \n","2018 -> ROOT\n","; -> punct\n","Howard -> conj\n","and -> cc\n","Ruder -> conj\n",", -> punct\n","2018 -> appos\n",") -> punct\n",". -> punct\n"," , 2018 , \n","These -> nsubj\n","include -> ROOT\n","sentence -> compound\n","- -> punct\n","level -> compound\n","tasks -> dobj\n","such -> amod\n","as -> prep\n","natural -> amod\n","language -> compound\n","inference -> pobj\n","( -> punct\n","Bowman -> intj\n","et -> compound\n","al -> dep\n",". -> appos\n",", -> punct\n","These , include such natural , tasks inference\n","2015 -> dep\n","; -> punct\n","Williams -> compound\n","et -> compound\n","al -> dep\n",". -> ROOT\n",", -> punct\n"," , . , \n","2018 -> ROOT\n",") -> punct\n","and -> cc\n","paraphrasing -> conj\n","( -> punct\n","Dolan -> dobj\n","and -> cc\n","Brockett -> conj\n",", -> punct\n","2005 -> npadvmod\n",") -> punct\n",", -> punct\n","which -> nsubj\n","aim -> advcl\n","to -> aux\n","predict -> xcomp\n","the -> det\n","relationships -> dobj\n","between -> prep\n","sentences -> pobj\n","by -> prep\n","analyzing -> pcomp\n","them -> dobj\n","holistically -> advmod\n",", -> punct\n","as -> advmod\n","well -> advmod\n","as -> cc\n","token -> amod\n","- -> punct\n","level -> compound\n","tasks -> dobj\n","such -> amod\n","as -> prep\n","named -> acl\n","entity -> compound\n","recognition -> oprd\n","and -> cc\n","question -> compound\n","answering -> conj\n",", -> punct\n","where -> advmod\n","models -> nsubjpass\n","are -> auxpass\n","required -> relcl\n","to -> aux\n","produce -> xcomp\n","fine -> advmod\n","- -> punct\n","grained -> amod\n","output -> dobj\n","at -> prep\n","the -> det\n","token -> amod\n","level -> pobj\n","( -> punct\n","Tjong -> compound\n","Kim -> compound\n","Sang -> appos\n","and -> cc\n","De -> compound\n","Meulder -> conj\n",", -> punct\n","2003 -> appos\n","; -> punct\n","Rajpurkar -> appos\n","et -> compound\n","al -> dep\n",". -> appos\n",", -> punct\n","which models , 2018 token such grain token , Dolan relationships sentences them tasks output level\n","2016 -> punct\n",") -> punct\n",". -> ROOT\n"," , . , \n","There -> expl\n","are -> ROOT\n","two -> nummod\n","existing -> amod\n","strategies -> attr\n","for -> prep\n","applying -> pcomp\n","pre -> dep\n","- -> dep\n","trained -> amod\n","language -> compound\n","representations -> dobj\n","to -> prep\n","downstream -> amod\n","tasks -> pobj\n",": -> punct\n","feature -> npadvmod\n","- -> punct\n","based -> amod\n","and -> cc\n","fine -> amod\n","- -> punct\n","tuning -> conj\n",". -> punct\n"," , be exist strategy trained downstream base fine , representations tasks\n","The -> det\n","feature -> npadvmod\n","- -> punct\n","based -> amod\n","approach -> ROOT\n",", -> punct\n","such -> amod\n","as -> prep\n","ELMo -> pobj\n","( -> punct\n","Peters -> appos\n","et -> compound\n","al -> dep\n",". -> appos\n",", -> punct\n"," , base approach such , ELMo\n","2018a -> npadvmod\n",") -> punct\n",", -> punct\n","uses -> ROOT\n","task -> npadvmod\n","- -> punct\n","specific -> amod\n","architectures -> dobj\n","that -> nsubj\n","include -> relcl\n","the -> det\n","pre -> dep\n","- -> dep\n","trained -> amod\n","representations -> dobj\n","as -> prep\n","additional -> amod\n","features -> pobj\n",". -> punct\n","that , use specific train additional , architectures representations features\n","The -> det\n","fine -> amod\n","- -> punct\n","tuning -> compound\n","approach -> ROOT\n",", -> punct\n","such -> amod\n","as -> prep\n","the -> det\n","Generative -> nmod\n","Pre -> dep\n","- -> dep\n","trained -> amod\n","Transformer -> pobj\n","( -> punct\n","OpenAI -> compound\n","GPT -> appos\n",") -> punct\n","( -> punct\n","Radford -> ROOT\n","et -> compound\n","al -> dep\n",". -> appos\n",", -> punct\n"," , fine approach such train Radford , Transformer\n","2018 -> punct\n",") -> punct\n",", -> punct\n","introduces -> ROOT\n","minimal -> amod\n","task -> npadvmod\n","- -> punct\n","specific -> amod\n","parameters -> dobj\n",", -> punct\n","and -> cc\n","is -> auxpass\n","trained -> conj\n","on -> prep\n","the -> det\n","downstream -> amod\n","tasks -> pobj\n","by -> agent\n","simply -> advmod\n","fine -> amod\n","- -> punct\n","tuning -> pobj\n","all -> det\n","pretrained -> amod\n","parameters -> dobj\n",". -> punct\n"," , introduce minimal specific downstream by fine pretraine , parameters tasks tuning parameters\n","The -> det\n","two -> nummod\n","approaches -> nsubj\n","share -> ROOT\n","the -> det\n","same -> amod\n","objective -> amod\n","function -> dobj\n","during -> prep\n","pre -> dep\n","- -> dep\n","training -> pobj\n",", -> punct\n","where -> advmod\n","they -> nsubj\n","use -> relcl\n","unidirectional -> amod\n","language -> compound\n","models -> dobj\n","to -> aux\n","learn -> xcomp\n","general -> amod\n","language -> compound\n","representations -> dobj\n",". -> punct\n","approaches they , share same objective unidirectional general , function training models representations\n","We -> nsubj\n","argue -> ROOT\n","that -> mark\n","current -> amod\n","techniques -> nsubj\n","restrict -> ccomp\n","the -> det\n","power -> dobj\n","of -> prep\n","the -> det\n","pre -> dep\n","- -> dep\n","trained -> amod\n","representations -> pobj\n",", -> punct\n","especially -> advmod\n","for -> prep\n","the -> det\n","fine -> amod\n","- -> punct\n","tuning -> amod\n","approaches -> pobj\n",". -> punct\n","We techniques , argue current train fine tuning , power representations approaches\n","The -> det\n","major -> amod\n","limitation -> nsubj\n","is -> ROOT\n","that -> mark\n","standard -> amod\n","language -> compound\n","models -> nsubj\n","are -> ccomp\n","unidirectional -> acomp\n",", -> punct\n","and -> cc\n","this -> nsubj\n","limits -> conj\n","the -> det\n","choice -> dobj\n","of -> prep\n","architectures -> pobj\n","that -> nsubjpass\n","can -> aux\n","be -> auxpass\n","used -> relcl\n","during -> prep\n","pre -> dep\n","- -> dep\n","training -> pobj\n",". -> punct\n","limitation models this that , major be standard , choice architectures training\n","For -> prep\n","example -> pobj\n",", -> punct\n","in -> prep\n","OpenAI -> compound\n","GPT -> pobj\n",", -> punct\n","the -> det\n","authors -> nsubj\n","use -> ROOT\n","a -> det\n","left -> amod\n","- -> punct\n","toright -> compound\n","architecture -> dobj\n",", -> punct\n","where -> advmod\n","every -> det\n","token -> nsubj\n","can -> aux\n","only -> advmod\n","attend -> relcl\n","to -> prep\n","previous -> amod\n","tokens -> pobj\n","in -> prep\n","the -> det\n","self -> compound\n","- -> punct\n","attention -> compound\n","layers -> pobj\n","of -> prep\n","the -> det\n","Transformer -> pobj\n","( -> punct\n","Vaswani -> compound\n","et -> compound\n","al -> dep\n",". -> appos\n",", -> punct\n","authors token , use left previous , example GPT architecture tokens layers Transformer\n","2017 -> ROOT\n",") -> punct\n",". -> punct\n"," , 2017 , \n","Such -> amod\n","restrictions -> nsubj\n","are -> ROOT\n","sub -> dep\n","- -> dep\n","optimal -> attr\n","for -> prep\n","sentence -> compound\n","- -> punct\n","level -> compound\n","tasks -> pobj\n",", -> punct\n","and -> cc\n","could -> aux\n","be -> conj\n","very -> advmod\n","harmful -> acomp\n","when -> advmod\n","applying -> advcl\n","finetuning -> nmod\n","based -> amod\n","approaches -> dobj\n","to -> prep\n","token -> amod\n","- -> punct\n","level -> compound\n","tasks -> pobj\n","such -> amod\n","as -> prep\n","question -> compound\n","answering -> pobj\n",", -> punct\n","where -> advmod\n","it -> nsubj\n","is -> ccomp\n","crucial -> acomp\n","to -> aux\n","incorporate -> xcomp\n","context -> dobj\n","from -> prep\n","both -> det\n","directions -> pobj\n",". -> punct\n","restrictions it , such be optimal base token such , tasks approaches tasks answering context directions\n","In -> prep\n","this -> det\n","paper -> pobj\n",", -> punct\n","we -> nsubj\n","improve -> ROOT\n","the -> det\n","fine -> amod\n","- -> punct\n","tuning -> nmod\n","based -> amod\n","approaches -> dobj\n","by -> prep\n","proposing -> pcomp\n","BERT -> dobj\n",": -> punct\n","Bidirectional -> compound\n","Encoder -> compound\n","Representations -> ROOT\n","from -> prep\n","Transformers -> pobj\n",". -> punct\n","we , improve fine base Representations , paper approaches BERT Transformers\n","BERT -> nsubj\n","alleviates -> ROOT\n","the -> det\n","previously -> advmod\n","mentioned -> amod\n","unidirectionality -> compound\n","constraint -> dobj\n","by -> prep\n","using -> pcomp\n","a -> det\n","“ -> punct\n","masked -> amod\n","language -> compound\n","model -> dobj\n","” -> punct\n","( -> punct\n","MLM -> nmod\n",") -> punct\n","pre -> dep\n","- -> dep\n","training -> amod\n","objective -> appos\n",", -> punct\n","inspired -> acl\n","by -> agent\n","the -> det\n","Cloze -> compound\n","task -> pobj\n","( -> punct\n","Taylor -> appos\n",", -> punct\n","1953 -> npadvmod\n",") -> punct\n",". -> punct\n","BERT , alleviate mention masked training by , constraint model task\n"],"name":"stdout"},{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"tags":[]}}]},{"cell_type":"code","metadata":{"id":"UadrasAWY_vu","colab_type":"code","colab":{},"executionInfo":{"status":"aborted","timestamp":1595250751366,"user_tz":-60,"elapsed":18099,"user":{"displayName":"DANNY SIMON","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gi18KVFgThD7ZGzTCYOye6DyIuS7dH-MpImpY15vg=s64","userId":"18269197615476840761"}}},"source":["# import matplotlib\n","# fig = matplotlib.pyplot.gcf()\n","# fig.set_size_inches(18.5, 10.5)\n","# fig.savefig('test2png.png', dpi=100)"],"execution_count":null,"outputs":[]}]}